!function(){"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.p="/";var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=document.querySelector(t),this._btnPopupClose=document.querySelector(".popup__container-close-popup")}var t,r;return t=e,(r=[{key:"open",value:function(){this._selector.classList.remove("open"),document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){this._selector.classList.add("open"),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._btnPopupClose.addEventListener("click",this.close.bind(this)),this._selector.addEventListener("click",(function(t){t.target.classList.contains("popup__overlay")&&e.close()}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(s,e);var t,n,r,u,l=(r=s,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(r);if(u){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function s(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),l.call(this,e)}return t=s,(n=[{key:"open",value:function(e,t){this.containerImage=document.querySelector(".modal__image-card").src=e,this.ContainerTitle=document.querySelector(".modal__title-text").textContent=t,this._selector.classList.remove("open"),document.removeEventListener("keydown",this._handleEscClose)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(r),l=[{name:"Valle de Yosemite",src:e.p+"100a342ee639b0e3137a.jpeg"},{name:"Lago Louise",src:e.p+"521ae5d62f4a54ebe4e8.jpeg"},{name:"MontaÃ±as Calvas",src:e.p+"7a191508ccf12e43aeaf.jpeg"},{name:"Latemar",src:e.p+"121ac7a894f14309e02a.jpeg"},{name:"Parque Nacional de la Vanoise",src:e.p+"4af25ddb77513654ef90.jpeg"},{name:"Lago di Braies",src:e.p+"c08832ea560c8067e8df.jpeg"}],s=document.querySelector(".elements"),f=document.querySelector(".modal"),p=f.querySelector(".modal__container-close"),y=document.querySelector(".profile__info-edit-btn"),m=document.querySelector("#name"),d=document.querySelector("#about-me"),v=document.querySelector(".profile__add-btn"),b=document.querySelector("#add-picture-form .popup__container-close-popup"),h={inputSelector:".popup__container-input",submitButtonSelector:".popup__container-save-btn",inactiveButtonClass:"popup__container-save-btn_inactive",inputErrorClass:"popup__container-input_type_error",errorClass:"popup__input-error_active"};function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},g.apply(this,arguments)}function w(e,t){return w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},w(e,t)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitAction=t,n._formElement=document.querySelector("".concat(e," .popup__container-form")),n._popupElement=document.querySelector(".popup"),n._inputList=n._formElement.querySelectorAll(".popup__container-input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this,t={};return this._inputList.forEach((function(n){var r,o=null===(r=e._formElement.querySelector("#".concat(n.id)))||void 0===r?void 0:r.value;t[n.id]=o})),t}},{key:"_handleAddClass",value:function(){this._popupElement.classList.add("open")}},{key:"setEventListeners",value:function(){var e=this;g(E(a.prototype),"setEventListeners",this).call(this),this._btnClose=this._popupElement.querySelector(".popup__container-close-popup"),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._submitAction(e._getInputValues())})),this._btnClose.addEventListener("click",(function(){e._handleAddClass()}))}},{key:"close",value:function(){g(E(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(r);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===k(o)?o:String(o)),r)}var o}var P=function(){function e(t){var n=t.nameUserSelector,r=t.jobUserSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=document.querySelector(n),this._jobSelector=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this._nameSelector.textContent=t,this._jobSelector.textContent=n}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),L="/web_project_4_esp/",O=new j("#edit-profile-form",(function(){q.close(),I.setUserInfo({name:m.value,job:d.value})})),q=new r("#edit-profile-form");O.setEventListeners();var I=new P({nameUserSelector:".profile__info-name",jobUserSelector:".profile__info-about"});function B(){f.classList.add("open")}var T=new j("#add-picture-form",(function(){var e,t,n,r;e=document.querySelector("#title-place"),t=document.querySelector("#new-image"),n={name:e.value,src:t.value},r=new V(n).generateCard(),s.prepend(r),x(),T.close()}));function x(){T.open()}function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===R(o)?o:String(o)),r)}var o}T.setEventListeners();var V=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._src=t.src,this._modalWithImage=new u(".modal")}var t,n;return t=e,(n=[{key:"_getTemplateCard",value:function(){return document.querySelector("#card-template").content.querySelector(".elements__card-container").cloneNode(!0)}},{key:"_handleDeleteCard",value:function(){this.element.remove()}},{key:"_handleLikeIcon",value:function(){this.element.querySelector(".elements__card-container-footing-btn").classList.toggle("elements__card-container-footing-btn_active"),this.computedStyle=window.getComputedStyle(this.element),this.backgroundImage=this.computedStyle.getPropertyValue("background-image"),this.modifiedBackgroundImage=this.backgroundImage.replace(L+"url(../../../../images/like-btn-active.png)")}},{key:"_handleOpenExpandedImage",value:function(){this._modalWithImage.open(this._src,this._name)}},{key:"_setEventListeners",value:function(){var e=this;this.likeBtn=this.element.querySelector(".elements__card-container-footing-btn"),this.likeBtn.addEventListener("click",(function(){e._handleLikeIcon()})),this.btnDelete=this.element.querySelector(".elements__card-container-btn-delete"),this.btnDelete.addEventListener("click",(function(){e._handleDeleteCard()})),this.elementImageCard.addEventListener("click",(function(){e._handleOpenExpandedImage()}))}},{key:"generateCard",value:function(){return this.element=this._getTemplateCard(),this.elementImageCard=this.element.querySelector(".elements__card-container-image"),this.elementTitleCard=this.element.querySelector(".elements__card-container-footing-title"),this._setEventListeners(),this.elementImageCard.src=this._src,this.elementImageCard.alt=this._name,this.elementTitleCard.textContent=this._name,this.element}}])&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}var M=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._isValid(e._formElement,r),e._toggleButtonState(t,n)}))}))}},{key:"_isValid",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),r.textContent=n,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),n.classList.remove(this._errorClass),n.textContent=""}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?this._disabledButton(t):this._enableButton(t)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_disabledButton",value:function(e){e.classList.add(this._inactiveButtonClass),e.setAttribute("disabled",!0)}},{key:"_enableButton",value:function(e){e.classList.remove(this._inactiveButtonClass),e.removeAttribute("disabled",!1)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function W(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==N(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===N(o)?o:String(o)),r)}var o}var Y=new(function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&W(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({items:l.map((function(e){return{name:e.name,src:L+e.src}})),renderer:function(e){var t=new V(e,"#card-Template").generateCard();Y.addItem(t)}},".elements");Y.renderer(),Array.from(document.querySelectorAll(".popup__container-form")).forEach((function(e){new M(h,e).enableValidation()})),p.addEventListener("click",B),f.addEventListener("click",B),y.addEventListener("click",(function(){O.open();var e=I.getUserInfo();m.value=e.name,d.value=e.job})),v.addEventListener("click",x),b.addEventListener("click",(function(){T.close()})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&f.classList.add("open")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,