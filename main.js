!function(){"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.p="/";var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=document.querySelector(t),this._btnPopupClose=document.querySelector(".popup__container-close-popup")}var t,r;return t=e,(r=[{key:"open",value:function(){this._selector.classList.remove("open"),document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){this._selector.classList.add("open"),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._btnPopupClose.addEventListener("click",this.close.bind(this)),this._selector.addEventListener("click",(function(t){t.target.classList.contains("popup__overlay")&&e.close()}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==o(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===o(i)?i:String(i)),r)}var i}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(s,e);var t,n,r,u,l=(r=s,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=c(r);if(u){var n=c(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function s(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,s),l.call(this,e)}return t=s,(n=[{key:"open",value:function(e,t){this.containerImage=document.querySelector(".modal__image-card").src=e,this.ContainerTitle=document.querySelector(".modal__title-text").textContent=t,this._selector.classList.remove("open"),document.removeEventListener("keydown",this._handleEscClose)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),s}(r);function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._src=t.src,this._modalWithImage=new u(".modal"),this.baseUrl="/web_project_4_esp/"}var t,n;return t=e,(n=[{key:"_getTemplateCard",value:function(){return document.querySelector("#card-template").content.querySelector(".elements__card-container").cloneNode(!0)}},{key:"_handleDeleteCard",value:function(){this.element.remove()}},{key:"_handleLikeIcon",value:function(){this.element.querySelector(".elements__card-container-footing-btn").classList.toggle("elements__card-container-footing-btn_active")}},{key:"_handleOpenExpandedImage",value:function(){this._modalWithImage.open(this._src,this._name)}},{key:"_setEventListeners",value:function(){var e=this;this.likeBtn=this.element.querySelector(".elements__card-container-footing-btn"),this.likeBtn.addEventListener("click",(function(){e._handleLikeIcon()})),this.btnDelete=this.element.querySelector(".elements__card-container-btn-delete"),this.btnDelete.addEventListener("click",(function(){e._handleDeleteCard()})),this.elementImageCard.addEventListener("click",(function(){e._handleOpenExpandedImage()}))}},{key:"generateCard",value:function(){return this.element=this._getTemplateCard(),this.elementImageCard=this.element.querySelector(".elements__card-container-image"),this.elementTitleCard=this.element.querySelector(".elements__card-container-footing-title"),this._setEventListeners(),this.elementImageCard.src=this.baseUrl+this._src,this.elementImageCard.alt=this._name,this.elementTitleCard.textContent=this._name,this.element}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}var m=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector)),n=this._formElement.querySelector(this._submitButtonSelector);this._toggleButtonState(t,n),t.forEach((function(r){r.addEventListener("input",(function(){e._isValid(e._formElement,r),e._toggleButtonState(t,n)}))}))}},{key:"_isValid",value:function(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,t.validationMessage)}},{key:"_showInputError",value:function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(this._inputErrorClass),r.textContent=n,r.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(this._inputErrorClass),n.classList.remove(this._errorClass),n.textContent=""}},{key:"_toggleButtonState",value:function(e,t){this._hasInvalidInput(e)?this._disabledButton(t):this._enableButton(t)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_disabledButton",value:function(e){e.classList.add(this._inactiveButtonClass),e.setAttribute("disabled",!0)}},{key:"_enableButton",value:function(e){e.classList.remove(this._inactiveButtonClass),e.removeAttribute("disabled",!1)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==d(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}var b=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),h=[{name:"Valle de Yosemite",src:e.p+"100a342ee639b0e3137a.jpeg"},{name:"Lago Louise",src:e.p+"521ae5d62f4a54ebe4e8.jpeg"},{name:"Montañas Calvas",src:e.p+"7a191508ccf12e43aeaf.jpeg"},{name:"Latemar",src:e.p+"121ac7a894f14309e02a.jpeg"},{name:"Parque Nacional de la Vanoise",src:e.p+"4af25ddb77513654ef90.jpeg"},{name:"Lago di Braies",src:e.p+"c08832ea560c8067e8df.jpeg"}],_=document.querySelector(".elements"),S=document.querySelector(".modal"),g=S.querySelector(".modal__container-close"),w=document.querySelector(".profile__info-edit-btn"),E=document.querySelector("#name"),j=document.querySelector("#about-me"),k=document.querySelector(".profile__add-btn"),C=document.querySelector("#add-picture-form .popup__container-close-popup"),P={inputSelector:".popup__container-input",submitButtonSelector:".popup__container-save-btn",inactiveButtonClass:"popup__container-save-btn_inactive",inputErrorClass:"popup__container-input_type_error",errorClass:"popup__input-error_active"};function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==L(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===L(o)?o:String(o)),r)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._submitAction=t,n._formElement=document.querySelector("".concat(e," .popup__container-form")),n._popupElement=document.querySelector(".popup"),n._inputList=n._formElement.querySelectorAll(".popup__container-input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this,t={};return this._inputList.forEach((function(n){var r,o=null===(r=e._formElement.querySelector("#".concat(n.id)))||void 0===r?void 0:r.value;t[n.id]=o})),t}},{key:"_handleAddClass",value:function(){this._popupElement.classList.add("open")}},{key:"setEventListeners",value:function(){var e=this;q(T(a.prototype),"setEventListeners",this).call(this),this._btnClose=this._popupElement.querySelector(".popup__container-close-popup"),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._submitAction(e._getInputValues())})),this._btnClose.addEventListener("click",(function(){e._handleAddClass()}))}},{key:"close",value:function(){q(T(a.prototype),"close",this).call(this),this._formElement.reset()}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(r);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==x(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==x(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===x(o)?o:String(o)),r)}var o}var A=function(){function e(t){var n=t.nameUserSelector,r=t.jobUserSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=document.querySelector(n),this._jobSelector=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this._nameSelector.textContent=t,this._jobSelector.textContent=n}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),U=new B("#edit-profile-form",(function(){D.close(),V.setUserInfo({name:E.value,job:j.value})})),D=new r("#edit-profile-form");U.setEventListeners();var V=new A({nameUserSelector:".profile__info-name",jobUserSelector:".profile__info-about"});function M(){S.classList.add("open")}var N=new B("#add-picture-form",(function(){var e,t,n,r;e=document.querySelector("#title-place"),t=document.querySelector("#new-image"),n={name:e.value,src:t.value},r=new f(n).generateCard(),_.prepend(r),W(),N.close()}));function W(){N.open()}N.setEventListeners();var Y=new b({items:h,renderer:function(e){var t=new f(e,"#card-Template").generateCard();Y.addItem(t)}},".elements");Y.renderer(),Array.from(document.querySelectorAll(".popup__container-form")).forEach((function(e){new m(P,e).enableValidation()})),g.addEventListener("click",M),S.addEventListener("click",M),w.addEventListener("click",(function(){U.open();var e=V.getUserInfo();E.value=e.name,j.value=e.job})),k.addEventListener("click",W),C.addEventListener("click",(function(){N.close()})),document.addEventListener("keydown",(function(e){"Escape"===e.key&&S.classList.add("open")}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,